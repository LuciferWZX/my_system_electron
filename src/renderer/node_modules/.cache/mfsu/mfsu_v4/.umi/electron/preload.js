"use strict";
const electron = require("electron");
const database = {
  getAll: async (dbName) => {
    return electron.ipcRenderer.invoke("db_get_all", dbName);
  },
  find: async (dbName, config) => {
    return electron.ipcRenderer.invoke("db_find", dbName, config);
  },
  update: async (dbName, newData, config) => {
    return electron.ipcRenderer.invoke("db_update", dbName, newData, config);
  }
};
const apiKey = "electron";
const databaseKey = "app_db";
const api = {
  versions: process.versions,
  platform: process.platform,
  appAction: (channel, result) => {
    electron.ipcRenderer.invoke(channel).then(result);
  },
  addIPCListener: (channel, listener) => {
    electron.ipcRenderer.on(channel, listener);
  },
  removeIPCListener: (channel) => {
    electron.ipcRenderer.removeAllListeners(channel);
  },
  scaleApp: (factor) => {
    electron.webFrame.setZoomFactor(factor);
  }
};
electron.contextBridge.exposeInMainWorld(apiKey, api);
electron.contextBridge.exposeInMainWorld(databaseKey, database);
