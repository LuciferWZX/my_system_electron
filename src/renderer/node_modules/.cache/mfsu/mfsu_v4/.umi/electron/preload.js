"use strict";
const electron = require("electron");
const appStore = {
  getStore: async (key) => {
    return electron.ipcRenderer.invoke("get_store", key);
  },
  setStore: async (key, value) => {
    return electron.ipcRenderer.invoke("set_store", key, value);
  },
  updateStore: async (storeKey, key, newData) => {
    return electron.ipcRenderer.invoke("update_store", storeKey, key, newData);
  }
};
const apiKey = "electron";
const appStoreKey = "app_store";
const api = {
  versions: process.versions,
  platform: process.platform,
  appAction: (channel, result) => {
    electron.ipcRenderer.invoke(channel).then(result);
  },
  sendMsgToMain: (channel) => {
    electron.ipcRenderer.invoke(channel).then();
  },
  addIPCListener: (channel, listener) => {
    electron.ipcRenderer.on(channel, listener);
  },
  removeIPCListener: (channel) => {
    electron.ipcRenderer.removeAllListeners(channel);
  },
  scaleApp: (factor) => {
    electron.webFrame.setZoomFactor(factor);
  }
};
electron.contextBridge.exposeInMainWorld(apiKey, api);
electron.contextBridge.exposeInMainWorld(appStoreKey, appStore);
